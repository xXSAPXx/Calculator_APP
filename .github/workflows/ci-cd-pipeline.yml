# The name of the workflow. This will appear in the Actions tab of your repository.
name: CI/CD Pipeline

# Events that trigger the workflow. This example uses push and pull request events to the main branch.
on:
  push:
    branches:
      - main # Triggers the workflow on push to the main branch
  pull_request:
    branches:
      - main # Triggers the workflow on pull request to the main branch

# Defines the jobs to be run in the workflow.
jobs:
  # The build job, which will build and test the application.
  build:
    # Specifies the type of runner to use. Here, we are using the latest version of Ubuntu.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks to be executed as part of the job.
    steps:
      # Step to check out the repository code using the actions/checkout@v2 action.
      - name: Checkout code
        uses: actions/checkout@v2

      # Step to set up Node.js using the actions/setup-node@v2 action.
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Specifies the Node.js version to use

      # Step to install project dependencies using npm.
      - name: Install dependencies
        run: npm install  # This installs all dependencies listed in package.json

      # Step to run tests using npm.
      - name: Run tests
        run: npm test

  # The deploy job, which will deploy the application to the production server.
  deploy:
    # This job runs on an Ubuntu runner and depends on the build job.
    # It will only run if the build job completes successfully.
    runs-on: ubuntu-latest
    needs: build # Specifies that this job depends on the build job

    steps:
      # Step to check out the repository code.
      - name: Checkout code
        uses: actions/checkout@v2

      # Step to set up Node.js.
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Specifies the Node.js version to use

      # Step to install project dependencies.
      - name: Install dependencies
        run: npm install

      # Step to deploy the application to the production server.
      - name: Deploy to Production
        # Define environment variables for SSH access.
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Private key for SSH access to the server
          SERVER: ${{ secrets.SERVER }} # Server address (IP or domain)
        run: |
          # Add the SSH private key
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          ssh-add -L # List the added keys for verification
          
          # Connect to the server and execute deployment commands
          ssh -o StrictHostKeyChecking=no ubuntu@$SERVER << 'EOF'
            cd /var/www/html/calculator # Navigate to the project directory
            git pull origin main # Pull the latest changes from the repository
            npm install # Install any new or updated dependencies
            pm2 restart all # Restart the application using pm2
          EOF
